Script started on 2019-09-16 16:46:00+0000
]0;khalil_carsten@testboard: ~/TestBoard[01;32mkhalil_carsten@testboard[00m:[01;34m~/TestBoard[00m$ cd scripts/
]0;khalil_carsten@testboard: ~/TestBoard/scripts[01;32mkhalil_carsten@testboard[00m:[01;34m~/TestBoard/scripts[00m$ ls
single_test_lstm.py  smote_test.py
]0;khalil_carsten@testboard: ~/TestBoard/scripts[01;32mkhalil_carsten@testboard[00m:[01;34m~/TestBoard/scripts[00m$ python [K3 single_test_lstm.py 
Using TensorFlow backend.
  0%|                                                                                                                                                                                                            | 0/10 [00:00<?, ?it/s, best loss: ?]WARNING:tensorflow:From /home/khalil_carsten/.local/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py:263: colocate_with (from tensorflow.python.framework.ops) is deprecated and will be removed in a future version.
Instructions for updating:
Colocations handled automatically by placer.
WARNING:tensorflow:From /home/khalil_carsten/.local/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py:3733: calling dropout (from tensorflow.python.ops.nn_ops) with keep_prob is deprecated and will be removed in a future version.
Instructions for updating:
Please use `rate` instead of `keep_prob`. Rate should be set to `rate = 1 - keep_prob`.
WARNING:tensorflow:From /home/khalil_carsten/.local/lib/python3.6/site-packages/tensorflow/python/ops/math_ops.py:3066: to_int32 (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use tf.cast instead.
2019-09-16 16:46:31.866658: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2019-09-16 16:46:32.067690: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2200000000 Hz
2019-09-16 16:46:32.069573: I tensorflow/compiler/xla/service/service.cc:150] XLA service 0x22d46f0 executing computations on platform Host. Devices:
2019-09-16 16:46:32.069613: I tensorflow/compiler/xla/service/service.cc:158]   StreamExecutor device (0): <undefined>, <undefined>
^C
Traceback (most recent call last):
  File "single_test_lstm.py", line 88, in <module>
    best = fmin(objective, space, algo=tpe.suggest, trials=trials, max_evals=10)
  File "/home/khalil_carsten/.local/lib/python3.6/site-packages/hyperopt/fmin.py", line 388, in fmin
    show_progressbar=show_progressbar,
  File "/home/khalil_carsten/.local/lib/python3.6/site-packages/hyperopt/base.py", line 639, in fmin
    show_progressbar=show_progressbar)
  File "/home/khalil_carsten/.local/lib/python3.6/site-packages/hyperopt/fmin.py", line 407, in fmin
    rval.exhaust()
  File "/home/khalil_carsten/.local/lib/python3.6/site-packages/hyperopt/fmin.py", line 262, in exhaust
    self.run(self.max_evals - n_done, block_until_done=self.asynchronous)
  File "/home/khalil_carsten/.local/lib/python3.6/site-packages/hyperopt/fmin.py", line 227, in run
    self.serial_evaluate()
  File "/home/khalil_carsten/.local/lib/python3.6/site-packages/hyperopt/fmin.py", line 141, in serial_evaluate
    result = self.domain.evaluate(spec, ctrl)
  File "/home/khalil_carsten/.local/lib/python3.6/site-packages/hyperopt/base.py", line 844, in evaluate
    rval = self.fn(pyll_rval)
  File "single_test_lstm.py", line 78, in objective
    verbose=0, validation_split=0.33)
  File "/home/khalil_carsten/.local/lib/python3.6/site-packages/keras/engine/training.py", line 1178, in fit
    validation_freq=validation_freq)
  File "/home/khalil_carsten/.local/lib/python3.6/site-packages/keras/engine/training_arrays.py", line 204, in fit_loop
    outs = fit_function(ins_batch)
  File "/home/khalil_carsten/.local/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py", line 2979, in __call__
    return self._call(inputs)
  File "/home/khalil_carsten/.local/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py", line 2937, in _call
    fetched = self._callable_fn(*array_vals)
  File "/home/khalil_carsten/.local/lib/python3.6/site-packages/tensorflow/python/client/session.py", line 1439, in __call__
    run_metadata_ptr)
KeyboardInterrupt
]0;khalil_carsten@testboard: ~/TestBoard/scripts[01;32mkhalil_carsten@testboard[00m:[01;34m~/TestBoard/scripts[00m$ nano[K[K[K[Kls
single_test_lstm.py  smote_test.py
]0;khalil_carsten@testboard: ~/TestBoard/scripts[01;32mkhalil_carsten@testboard[00m:[01;34m~/TestBoard/scripts[00m$ atom [K[K[K[K[Knano  singlew[K[K[K[K[K[K[K[Ksingle_test_lstm.py 
[?1049h[22;0;0t[1;65r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[63;116H(B[0;7m[ Reading File ](B[m[63;115H(B[0;7m[ Read 91 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                                                                    single_test_lstm.py                                                                                                               [1;245H(B[m[64d(B[0;7m^G(B[m Get Help[18G(B[0;7m^O(B[m Write Out     (B[0;7m^W(B[m Where Is[52G(B[0;7m^K(B[m Cut Text[69G(B[0;7m^J(B[m Justify[86G(B[0;7m^C(B[m Cur Pos[103G(B[0;7mM-U(B[m Undo[64;120H(B[0;7mM-A(B[m Mark Text    (B[0;7mM-](B[m To Bracket   (B[0;7mM-â–²(B[m Previous     (B[0;7m^B(B[m Back[64;188H(B[0;7m^â—€(B[m Prev Word     (B[0;7m^A(B[m Home[64;222H(B[0;7m^P(B[m Prev Line[65d(B[0;7m^X(B[m Exit[65;18H(B[0;7m^R(B[m Read File     (B[0;7m^\(B[m Replace[52G(B[0;7m^U(B[m Uncut Text    (B[0;7m^T(B[m To Linter     (B[0;7m^_(B[m Go To Line    (B[0;7mM-E(B[m Redo[65;120H(B[0;7mM-6(B[m Copy Text    (B[0;7mM-W(B[m WhereIs Next (B[0;7mM-â–¼(B[m Next[65;171H(B[0;7m^F(B[m Forward[188G(B[0;7m^â–¶(B[m Next Word     (B[0;7m^E(B[m End[65;222H(B[0;7m^N(B[m Next Line[63d[3d(B[0;1m[36mimport[39m(B[m sys[4dsys.path.append((B[0;1m[32m'../'[39m(B[m)[6d(B[0;1m[36mfrom[39m(B[m keras (B[0;1m[36mimport[39m(B[m backend (B[0;1m[36mas[39m(B[m K[7d(B[0;1m[36mfrom[39m(B[m sklearn.preprocessing (B[0;1m[36mimport[39m(B[m MinMaxScaler[8d(B[0;1m[36mfrom[39m(B[m keras.models (B[0;1m[36mimport[39m(B[m Sequential[9d(B[0;1m[36mfrom[39m(B[m keras.layers (B[0;1m[36mimport[39m(B[m LSTM, Dense[10d(B[0;1m[36mfrom[39m(B[m testboard.stocks (B[0;1m[36mimport[39m(B[m Stocks[11d(B[0;1m[36mfrom[39m(B[m testboard.stocks (B[0;1m[36mimport[39m(B[m CLOSING, OPENING, MAX_PRICE, MIN_PRICE, MEAN_PRICE, VOLUME[12d(B[0;1m[36mfrom[39m(B[m hyperopt (B[0;1m[36mimport[39m(B[m hp, fmin, tpe, hp, STATUS_OK, Trials[13d(B[0;1m[36mimport[39m(B[m numpy[15dspace = {[16;5H(B[0;1m[32m'recurrent_dropout'[39m(B[m: hp.uniform((B[0;1m[32m'recurrent_dropout'[39m(B[m, 0, 1),[17;5H(B[0;1m[32m'batch_size'[39m(B[m: hp.choice((B[0;1m[32m'batch_size'[39m(B[m, [1, 2, 64, 128, 256, 512]),[18;5H(B[0;1m[32m'cells'[39m(B[m: hp.choice((B[0;1m[32m'cells'[39m(B[m, [1, 2, 16, 20, 50, 80, 100]),[19;5H(B[0;1m[32m'look_back_proportion'[39m(B[m: hp.choice((B[0;1m[32m'look_back_proportion'[39m(B[m, [25, 50, 75, 100]),[20;5H(B[0;1m[32m'nb_epochs'[39m(B[m :  5000,[21d}[23dstocks = Stocks(year=2015, cod=(B[0;1m[32m'VALE3'[39m(B[m, period=11)[24ddataset = stocks.selected_fields([CLOSING])[26d(B[0;1m[36mdef[34m label[39m(B[m(dataset, look_back_proportion, mean_of=0):[27;5H(B[0;1m[32m"""Nani."""[28;5H[39m(B[mdata_x, data_y = [], [][30;5Hscaler = MinMaxScaler(feature_range=(0, 1))[31;5Hdataset = scaler.fit_transform(dataset)[33;5Hlook_back = int(len(dataset)*0.3*(look_back_proportion/100))[35;5H(B[0;1m[36mfor[39m(B[m i (B[0;1m[36min[39m(B[m range(len(dataset)-look_back):[36;9Hday_t = dataset[i:(i+look_back)][37;9Hday_t1 = dataset[i + look_back][38;9Hdata_x.append(day_t)[39;9H(B[0;1m[36mif[39m(B[m day_t.mean(axis=mean_of)[mean_of] > day_t1[mean_of]:[40;13Hdata_y.append(0)[41;9H(B[0;1m[36melse[39m(B[m:[42ddata_y.append(1)[44;5H(B[0;1m[36mreturn[39m(B[m numpy.array(data_x), numpy.array(data_y), look_back[46d(B[0;1m[36mdef[34m create_data_set[39m(B[m(look_back_proportion):[48;5Htrain_proportion = 0.33[49;5Hdata_x, data_y, look_back = label(dataset, look_back_proportion)[50;5Htrain_size = int(len(dataset) * train_proportion)[52;5Htrain_x = data_x[0:train_size][53;5Htest_x = data_x[train_size:len(data_x)][54;5Htrain_y = data_y[0:train_size][55;5Htest_y = data_y[train_size:len(data_x)][57;5Htrain_x = numpy.reshape(train_x, (train_x.shape[0], train_x.shape[1],[58;39Htrain_x.shape[2]))[59;5Htest_x = numpy.reshape(test_x, (test_x.shape[0], test_x.shape[1],[60;37Htest_x.shape[2]))[61;5Htrain_x = numpy.array([t.transpose() (B[0;1m[36mfor[39m(B[m t (B[0;1m[36min[39m(B[m train_x])[62;5Htest_x = numpy.array([t.transpose() (B[0;1m[36mfor[39m(B[m t (B[0;1m[36min[39m(B[m test_x])[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[8d[?12l[?25h[?25l[10d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[23d[?12l[?25h[?25l[24d[?12l[?25h[?25l[25d[?12l[?25h[?25l[1;237H(B[0;7mModified(B[m[25;62r[25;1HM[1;65r[26;1H[?12l[?25h[?25l[25;62r[25;1HM[1;65r[27;1H[?12l[?25h[?25l[A[?12l[?25h[?25l[63d[K[25d[?12l[?25h[?25l7[25;62r8M[1;65r[25;1Hconfig = tf.ConfigProto(device_count={(B[0;1m[32m"CPU"[39m(B[m: 8})[26dkeras.backend.tensorflow_backend.set_session(tf.Session(config=config))[?12l[?25h[?25l [?12l[?25h[?25l[26;55H[K[?12l[?25h[?25l[26;45H[K[?12l[?25h[?25l[26;25H[K[?12l[?25h[?25l[26;12H[K[?12l[?25h[?25l[26;63r[63;1H
[1;65r[25;45H[42m [49m(B[m[K[62;37Htest_x.shape[2]))[25;46H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[39G"CPU[K[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[42m [49m(B[m[K[?12l[?25h[?25l [?12l[?25h[?25l[42m [49m(B[m[K[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[K[?12l[?25h[?25lK.set_session(K.tf.Session(config=K.tf.ConfigProto(intra_op_â€Œâ€‹parallelism_threads=â€Œâ€‹32, inter_op_parallelism_threads=32)))[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l3[?12l[?25h[?25l2[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l4, inter_op_parallelism_threads=32)))[25;82H[?12l[?25h[?25l,[?12l[?25h[?25l [?12l[?25h[?25li[?12l[?25h[?25ln[?12l[?25h[?25lt[?12l[?25h[?25le[?12l[?25h[?25lr[?12l[?25h[?25l_[?12l[?25h[?25lo[?12l[?25h[?25lp[?12l[?25h[?25l_[?12l[?25h[?25lp[?12l[?25h[?25la[?12l[?25h[?25lr[?12l[?25h[?25la[?12l[?25h[?25ll[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25ll[?12l[?25h[?25li[?12l[?25h[?25ls[?12l[?25h[?25lm[?12l[?25h[?25l_[?12l[?25h[?25lt[?12l[?25h[?25lh[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25la[?12l[?25h[?25ld[?12l[?25h[?25ls[?12l[?25h[?25l=[?12l[?25h[?25l3[?12l[?25h[?25l2[?12l[?25h[?25l)[?12l[?25h[?25l)[?12l[?25h[?25l)[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l2[?12l[?25h[?25l)))[K[?12l[?25h[?25l)))[K[?12l[?25h[?25l4)))[?12l[?25h[?25l[63d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                                                                                                                         [64;1H Y(B[m Yes[K[65d(B[0;7m N(B[m No  [65;17H(B[0;7m^C(B[m Cancel[K[63;63H[?12l[?25h[?25l[64d(B[0;7m^G(B[m Get Help[64;62H(B[0;7mM-D(B[m DOS Format[64;123H(B[0;7mM-A(B[m Append[64;184H(B[0;7mM-B(B[m Backup File[65d(B[0;7m^C(B[m Cancel[17G         [65;62H(B[0;7mM-M(B[m Mac Format[65;123H(B[0;7mM-P(B[m Prepend[65;184H(B[0;7m^T(B[m To Files[63d(B[0;7mFile Name to Write: single_test_lstm.py                      (B[m[63;40H[?12l[?25h[?25l[63;40H[?12l[?25h[?25l[K[1;245H[1;237H(B[0;7m        (B[m[63;115H(B[0;7m[ Wrote 93 lines ](B[m[J[65;246H[?12l[?25h[65;1H[?1049l[23;0;0t[?1l>]0;khalil_carsten@testboard: ~/TestBoard/scripts[01;32mkhalil_carsten@testboard[00m:[01;34m~/TestBoard/scripts[00m$ nano single_test_lstm.py ls[Kpython3 single_test_lstm.py 
  File "single_test_lstm.py", line 23
    K.set_session(K.tf.Session(config=K.tf.ConfigProto(intra_op_â€Œâ€‹parallelism_threads=â€Œâ€‹4, inter_op_parallelism_threads=4)))
                                                                                    ^
SyntaxError: invalid character in identifier
]0;khalil_carsten@testboard: ~/TestBoard/scripts[01;32mkhalil_carsten@testboard[00m:[01;34m~/TestBoard/scripts[00m$ python3 single_test_lstm.py [3Pnano[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?1049h[22;0;0t[1;65r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[63;116H(B[0;7m[ Reading File ](B[m[63;115H(B[0;7m[ Read 93 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                                                                    single_test_lstm.py                                                                                                               [1;245H(B[m[64d(B[0;7m^G(B[m Get Help[18G(B[0;7m^O(B[m Write Out     (B[0;7m^W(B[m Where Is[52G(B[0;7m^K(B[m Cut Text[69G(B[0;7m^J(B[m Justify[86G(B[0;7m^C(B[m Cur Pos[103G(B[0;7mM-U(B[m Undo[64;120H(B[0;7mM-A(B[m Mark Text    (B[0;7mM-](B[m To Bracket   (B[0;7mM-â–²(B[m Previous     (B[0;7m^B(B[m Back[64;188H(B[0;7m^â—€(B[m Prev Word     (B[0;7m^A(B[m Home[64;222H(B[0;7m^P(B[m Prev Line[65d(B[0;7m^X(B[m Exit[65;18H(B[0;7m^R(B[m Read File     (B[0;7m^\(B[m Replace[52G(B[0;7m^U(B[m Uncut Text    (B[0;7m^T(B[m To Linter     (B[0;7m^_(B[m Go To Line    (B[0;7mM-E(B[m Redo[65;120H(B[0;7mM-6(B[m Copy Text    (B[0;7mM-W(B[m WhereIs Next (B[0;7mM-â–¼(B[m Next[65;171H(B[0;7m^F(B[m Forward[188G(B[0;7m^â–¶(B[m Next Word     (B[0;7m^E(B[m End[65;222H(B[0;7m^N(B[m Next Line[63d[3d(B[0;1m[36mimport[39m(B[m sys[4dsys.path.append((B[0;1m[32m'../'[39m(B[m)[6d(B[0;1m[36mfrom[39m(B[m keras (B[0;1m[36mimport[39m(B[m backend (B[0;1m[36mas[39m(B[m K[7d(B[0;1m[36mfrom[39m(B[m sklearn.preprocessing (B[0;1m[36mimport[39m(B[m MinMaxScaler[8d(B[0;1m[36mfrom[39m(B[m keras.models (B[0;1m[36mimport[39m(B[m Sequential[9d(B[0;1m[36mfrom[39m(B[m keras.layers (B[0;1m[36mimport[39m(B[m LSTM, Dense[10d(B[0;1m[36mfrom[39m(B[m testboard.stocks (B[0;1m[36mimport[39m(B[m Stocks[11d(B[0;1m[36mfrom[39m(B[m testboard.stocks (B[0;1m[36mimport[39m(B[m CLOSING, OPENING, MAX_PRICE, MIN_PRICE, MEAN_PRICE, VOLUME[12d(B[0;1m[36mfrom[39m(B[m hyperopt (B[0;1m[36mimport[39m(B[m hp, fmin, tpe, hp, STATUS_OK, Trials[13d(B[0;1m[36mimport[39m(B[m numpy[15dspace = {[16;5H(B[0;1m[32m'recurrent_dropout'[39m(B[m: hp.uniform((B[0;1m[32m'recurrent_dropout'[39m(B[m, 0, 1),[17;5H(B[0;1m[32m'batch_size'[39m(B[m: hp.choice((B[0;1m[32m'batch_size'[39m(B[m, [1, 2, 64, 128, 256, 512]),[18;5H(B[0;1m[32m'cells'[39m(B[m: hp.choice((B[0;1m[32m'cells'[39m(B[m, [1, 2, 16, 20, 50, 80, 100]),[19;5H(B[0;1m[32m'look_back_proportion'[39m(B[m: hp.choice((B[0;1m[32m'look_back_proportion'[39m(B[m, [25, 50, 75, 100]),[20;5H(B[0;1m[32m'nb_epochs'[39m(B[m :  5000,[21d}[23dstocks = Stocks(year=2015, cod=(B[0;1m[32m'VALE3'[39m(B[m, period=11)[24ddataset = stocks.selected_fields([CLOSING])[25dK.set_session(K.tf.Session(config=K.tf.ConfigProto(intra_op_â€Œâ€‹parallelism_threads=â€Œâ€‹4, inter_op_parallelism_threads=4)))[28d(B[0;1m[36mdef[34m label[39m(B[m(dataset, look_back_proportion, mean_of=0):[29;5H(B[0;1m[32m"""Nani."""[30;5H[39m(B[mdata_x, data_y = [], [][32;5Hscaler = MinMaxScaler(feature_range=(0, 1))[33;5Hdataset = scaler.fit_transform(dataset)[35;5Hlook_back = int(len(dataset)*0.3*(look_back_proportion/100))[37;5H(B[0;1m[36mfor[39m(B[m i (B[0;1m[36min[39m(B[m range(len(dataset)-look_back):[38;9Hday_t = dataset[i:(i+look_back)][39;9Hday_t1 = dataset[i + look_back][40;9Hdata_x.append(day_t)[41;9H(B[0;1m[36mif[39m(B[m day_t.mean(axis=mean_of)[mean_of] > day_t1[mean_of]:[42;13Hdata_y.append(0)[43;9H(B[0;1m[36melse[39m(B[m:[44ddata_y.append(1)[46;5H(B[0;1m[36mreturn[39m(B[m numpy.array(data_x), numpy.array(data_y), look_back[48d(B[0;1m[36mdef[34m create_data_set[39m(B[m(look_back_proportion):[50;5Htrain_proportion = 0.33[51;5Hdata_x, data_y, look_back = label(dataset, look_back_proportion)[52;5Htrain_size = int(len(dataset) * train_proportion)[54;5Htrain_x = data_x[0:train_size][55;5Htest_x = data_x[train_size:len(data_x)][56;5Htrain_y = data_y[0:train_size][57;5Htest_y = data_y[train_size:len(data_x)][59;5Htrain_x = numpy.reshape(train_x, (train_x.shape[0], train_x.shape[1],[60;39Htrain_x.shape[2]))[61;5Htest_x = numpy.reshape(test_x, (test_x.shape[0], test_x.shape[1],[62;37Htest_x.shape[2]))[3d[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l [?12l[?25h[?25ls[?12l[?25h[?25ly[?12l[?25h[?25ls[?12l[?25h[?25l[4d[?12l[?25h[?25ls[?12l[?25h[?25ly[?12l[?25h[?25ls[?12l[?25h[?25l.[?12l[?25h[?25lp[?12l[?25h[?25la[?12l[?25h[?25l[63d[K[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[35d[?12l[?25h[?25l[36d[?12l[?25h[?25l[37d[?12l[?25h[?25l[38d[?12l[?25h[?25l[39d[?12l[?25h[?25l[40d[?12l[?25h[?25l[41d[?12l[?25h[?25l[42d[?12l[?25h[?25l[43d[?12l[?25h[?25l[44d[?12l[?25h[?25l[45d[?12l[?25h[?25l[46d[?12l[?25h[?25l[47d[?12l[?25h[?25l[48d[?12l[?25h[?25l[49d[?12l[?25h[?25l[50d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l [?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l5[?12l[?25h[?25l0[?12l[?25h[?25l0[?12l[?25h[?25l0[?12l[?25h[?25l,[?12l[?25h[?25l[21d[?12l[?25h[?25l}[?12l[?25h[?25l[22d[?12l[?25h[?25l[23d[?12l[?25h[?25ls[?12l[?25h[?25lt[?12l[?25h[?25lo[?12l[?25h[?25lc[?12l[?25h[?25lk[?12l[?25h[?25ls[?12l[?25h[?25l [?12l[?25h[?25l=[?12l[?25h[?25l [?12l[?25h[?25lS[?12l[?25h[?25lt[?12l[?25h[?25lo[?12l[?25h[?25lc[?12l[?25h[?25l[24d[?12l[?25h[?25lc[?12l[?25h[?25l[25d[?12l[?25h[?25lK[?12l[?25h[?25l.[?12l[?25h[?25lt[?12l[?25h[?25lf[?12l[?25h[?25l.[?12l[?25h[?25lS[?12l[?25h[?25le[?12l[?25h[?25ls[?12l[?25h[?25ls[?12l[?25h[?25li[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25l([?12l[?25h[?25lc[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25lf[?12l[?25h[?25li[?12l[?25h[?25lg[?12l[?25h[?25l=[?12l[?25h[?25lK[?12l[?25h[?25l.[?12l[?25h[?25lt[?12l[?25h[?25lf[?12l[?25h[?25l.[?12l[?25h[?25lC[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25lf[?12l[?25h[?25li[?12l[?25h[?25lg[?12l[?25h[?25lP[?12l[?25h[?25lr[?12l[?25h[?25lo[?12l[?25h[?25lt[?12l[?25h[?25lo[?12l[?25h[?25l([?12l[?25h[?25li[?12l[?25h[?25ln[?12l[?25h[?25lt[?12l[?25h[?25lr[?12l[?25h[?25la[?12l[?25h[?25l_[?12l[?25h[?25lo[?12l[?25h[?25lp[?12l[?25h[?25l[C[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25lp[?12l[?25h[?25la[?12l[?25h[?25lr[?12l[?25h[?25la[?12l[?25h[?25ll[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25ll[?12l[?25h[?25li[?12l[?25h[?25ls[?12l[?25h[?25lm[?12l[?25h[?25l_[?12l[?25h[?25lt[?12l[?25h[?25lh[?12l[?25h[?25lr[?12l[?25h[?25l[64d[J[65;246H[?12l[?25h[65;1H[?1049l[23;0;0t[?1l>]0;khalil_carsten@testboard: ~/TestBoard/scripts[01;32mkhalil_carsten@testboard[00m:[01;34m~/TestBoard/scripts[00m$ nano single_test_lstm.py [3@python3[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
  File "single_test_lstm.py", line 23
    K.set_session(K.tf.Session(config=K.tf.ConfigProto(intra_op_â€Œâ€‹parallelism_threads=â€Œâ€‹4, inter_op_parallelism_threads=4)))
                                                                                    ^
SyntaxError: invalid character in identifier
]0;khalil_carsten@testboard: ~/TestBoard/scripts[01;32mkhalil_carsten@testboard[00m:[01;34m~/TestBoard/scripts[00m$ python3 single_test_lstm.py 
  File "single_test_lstm.py", line 23
    K.set_session(K.tf.Session(config=K.tf.ConfigProto(intra_op_â€Œâ€‹parallelism_threads=â€Œâ€‹4, inter_op_parallelism_threads=4)))
                                                                                    ^
SyntaxError: invalid character in identifier
]0;khalil_carsten@testboard: ~/TestBoard/scripts[01;32mkhalil_carsten@testboard[00m:[01;34m~/TestBoard/scripts[00m$ python3 single_test_lstm.py [3Pnano[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?1049h[22;0;0t[1;65r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[63;116H(B[0;7m[ Reading File ](B[m[63;115H(B[0;7m[ Read 93 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                                                                    single_test_lstm.py                                                                                                               [1;245H(B[m[64d(B[0;7m^G(B[m Get Help[18G(B[0;7m^O(B[m Write Out     (B[0;7m^W(B[m Where Is[52G(B[0;7m^K(B[m Cut Text[69G(B[0;7m^J(B[m Justify[86G(B[0;7m^C(B[m Cur Pos[103G(B[0;7mM-U(B[m Undo[64;120H(B[0;7mM-A(B[m Mark Text    (B[0;7mM-](B[m To Bracket   (B[0;7mM-â–²(B[m Previous     (B[0;7m^B(B[m Back[64;188H(B[0;7m^â—€(B[m Prev Word     (B[0;7m^A(B[m Home[64;222H(B[0;7m^P(B[m Prev Line[65d(B[0;7m^X(B[m Exit[65;18H(B[0;7m^R(B[m Read File     (B[0;7m^\(B[m Replace[52G(B[0;7m^U(B[m Uncut Text    (B[0;7m^T(B[m To Linter     (B[0;7m^_(B[m Go To Line    (B[0;7mM-E(B[m Redo[65;120H(B[0;7mM-6(B[m Copy Text    (B[0;7mM-W(B[m WhereIs Next (B[0;7mM-â–¼(B[m Next[65;171H(B[0;7m^F(B[m Forward[188G(B[0;7m^â–¶(B[m Next Word     (B[0;7m^E(B[m End[65;222H(B[0;7m^N(B[m Next Line[63d[3d(B[0;1m[36mimport[39m(B[m sys[4dsys.path.append((B[0;1m[32m'../'[39m(B[m)[6d(B[0;1m[36mfrom[39m(B[m keras (B[0;1m[36mimport[39m(B[m backend (B[0;1m[36mas[39m(B[m K[7d(B[0;1m[36mfrom[39m(B[m sklearn.preprocessing (B[0;1m[36mimport[39m(B[m MinMaxScaler[8d(B[0;1m[36mfrom[39m(B[m keras.models (B[0;1m[36mimport[39m(B[m Sequential[9d(B[0;1m[36mfrom[39m(B[m keras.layers (B[0;1m[36mimport[39m(B[m LSTM, Dense[10d(B[0;1m[36mfrom[39m(B[m testboard.stocks (B[0;1m[36mimport[39m(B[m Stocks[11d(B[0;1m[36mfrom[39m(B[m testboard.stocks (B[0;1m[36mimport[39m(B[m CLOSING, OPENING, MAX_PRICE, MIN_PRICE, MEAN_PRICE, VOLUME[12d(B[0;1m[36mfrom[39m(B[m hyperopt (B[0;1m[36mimport[39m(B[m hp, fmin, tpe, hp, STATUS_OK, Trials[13d(B[0;1m[36mimport[39m(B[m numpy[15dspace = {[16;5H(B[0;1m[32m'recurrent_dropout'[39m(B[m: hp.uniform((B[0;1m[32m'recurrent_dropout'[39m(B[m, 0, 1),[17;5H(B[0;1m[32m'batch_size'[39m(B[m: hp.choice((B[0;1m[32m'batch_size'[39m(B[m, [1, 2, 64, 128, 256, 512]),[18;5H(B[0;1m[32m'cells'[39m(B[m: hp.choice((B[0;1m[32m'cells'[39m(B[m, [1, 2, 16, 20, 50, 80, 100]),[19;5H(B[0;1m[32m'look_back_proportion'[39m(B[m: hp.choice((B[0;1m[32m'look_back_proportion'[39m(B[m, [25, 50, 75, 100]),[20;5H(B[0;1m[32m'nb_epochs'[39m(B[m :  5000,[21d}[23dstocks = Stocks(year=2015, cod=(B[0;1m[32m'VALE3'[39m(B[m, period=11)[24ddataset = stocks.selected_fields([CLOSING])[25dK.set_session(K.tf.Session(config=K.tf.ConfigProto(intra_op_â€Œâ€‹parallelism_threads=â€Œâ€‹4, inter_op_parallelism_threads=4)))[28d(B[0;1m[36mdef[34m label[39m(B[m(dataset, look_back_proportion, mean_of=0):[29;5H(B[0;1m[32m"""Nani."""[30;5H[39m(B[mdata_x, data_y = [], [][32;5Hscaler = MinMaxScaler(feature_range=(0, 1))[33;5Hdataset = scaler.fit_transform(dataset)[35;5Hlook_back = int(len(dataset)*0.3*(look_back_proportion/100))[37;5H(B[0;1m[36mfor[39m(B[m i (B[0;1m[36min[39m(B[m range(len(dataset)-look_back):[38;9Hday_t = dataset[i:(i+look_back)][39;9Hday_t1 = dataset[i + look_back][40;9Hdata_x.append(day_t)[41;9H(B[0;1m[36mif[39m(B[m day_t.mean(axis=mean_of)[mean_of] > day_t1[mean_of]:[42;13Hdata_y.append(0)[43;9H(B[0;1m[36melse[39m(B[m:[44ddata_y.append(1)[46;5H(B[0;1m[36mreturn[39m(B[m numpy.array(data_x), numpy.array(data_y), look_back[48d(B[0;1m[36mdef[34m create_data_set[39m(B[m(look_back_proportion):[50;5Htrain_proportion = 0.33[51;5Hdata_x, data_y, look_back = label(dataset, look_back_proportion)[52;5Htrain_size = int(len(dataset) * train_proportion)[54;5Htrain_x = data_x[0:train_size][55;5Htest_x = data_x[train_size:len(data_x)][56;5Htrain_y = data_y[0:train_size][57;5Htest_y = data_y[train_size:len(data_x)][59;5Htrain_x = numpy.reshape(train_x, (train_x.shape[0], train_x.shape[1],[60;39Htrain_x.shape[2]))[61;5Htest_x = numpy.reshape(test_x, (test_x.shape[0], test_x.shape[1],[62;37Htest_x.shape[2]))[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[22d[?12l[?25h[?25l[23d[?12l[?25h[?25l[24d[?12l[?25h[?25l[25d[?12l[?25h[?25lK[?12l[?25h[?25l.[?12l[?25h[?25ls[?12l[?25h[?25l[63d[K[25;5H[?12l[?25h[?25lt[?12l[?25h[?25l_[?12l[?25h[?25ls[?12l[?25h[?25le[?12l[?25h[?25ls[?12l[?25h[?25ls[?12l[?25h[?25li[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25l([?12l[?25h[?25lK[?12l[?25h[?25l.[?12l[?25h[?25lt[?12l[?25h[?25lf[?12l[?25h[?25l.[?12l[?25h[?25lS[?12l[?25h[?25le[?12l[?25h[?25ls[?12l[?25h[?25ls[?12l[?25h[?25li[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25l([?12l[?25h[?25lc[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25lf[?12l[?25h[?25li[?12l[?25h[?25lg[?12l[?25h[?25l=[?12l[?25h[?25lK[?12l[?25h[?25l.[?12l[?25h[?25lt[?12l[?25h[?25lf[?12l[?25h[?25l.[?12l[?25h[?25lC[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25lf[?12l[?25h[?25l[63;114H(B[0;7m[ Unbound key: M-` ](B[m[25;44H[?12l[?25h[?25li[?12l[?25h[?25lg[?12l[?25h[?25lP[?12l[?25h[?25l[63d[K[25;70H[?12l[?25h[?25ls[?12l[?25h[?25lm[?12l[?25h[?25l_[?12l[?25h[?25lt[?12l[?25h[?25lh[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25la[?12l[?25h[?25ld[?12l[?25h[?25ls[?12l[?25h[?25l[C[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l4[?12l[?25h[?25l,[?12l[?25h[?25l [?12l[?25h[?25li[?12l[?25h[?25ln[?12l[?25h[?25lt[?12l[?25h[?25le[?12l[?25h[?25lr[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25le[?12l[?25h[?25la[?12l[?25h[?25ld[?12l[?25h[?25ls[?12l[?25h[?25l[C[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l4[?12l[?25h[?25l,[?12l[?25h[?25l[1;237H(B[0;7mModified(B[m[25;82H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l4 inter_op_parallelism_threads=4)))[25;82H[?12l[?25h[?25l, inter_op_parallelism_threads=4)))[25;83H[?12l[?25h[?25l [?12l[?25h[?25li[?12l[?25h[?25ln[?12l[?25h[?25lt[?12l[?25h[?25le[?12l[?25h[?25lr[?12l[?25h[?25l_[?12l[?25h[?25lo[?12l[?25h[?25lp[?12l[?25h[?25l_[?12l[?25h[?25lp[?12l[?25h[?25la[?12l[?25h[?25lr[?12l[?25h[?25la[?12l[?25h[?25ll[?12l[?25h[?25ll[?12l[?25h[?25l[63d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                                                                                                                         [64;1H Y(B[m Yes[K[65d(B[0;7m N(B[m No  [65;17H(B[0;7m^C(B[m Cancel[K[63;63H[?12l[?25h[?25l[?12l[?25h[?25l[64d(B[0;7m^G(B[m Get Help[64;62H(B[0;7mM-D(B[m DOS Format[64;123H(B[0;7mM-A(B[m Append[64;184H(B[0;7mM-B(B[m Backup File[65d(B[0;7m^C(B[m Cancel[17G         [65;62H(B[0;7mM-M(B[m Mac Format[65;123H(B[0;7mM-P(B[m Prepend[65;184H(B[0;7m^T(B[m To Files[63d(B[0;7mFile Name to Write: single_test_lstm.py                      (B[m[63;40H[?12l[?25h[?25l[K[1;245H[1;237H(B[0;7m        (B[m[63;115H(B[0;7m[ Wrote 93 lines ](B[m[J[65;246H[?12l[?25h[65;1H[?1049l[23;0;0t[?1l>]0;khalil_carsten@testboard: ~/TestBoard/scripts[01;32mkhalil_carsten@testboard[00m:[01;34m~/TestBoard/scripts[00m$ [Anano single_test_lstm.py [3@python3[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
  File "single_test_lstm.py", line 23
    K.set_session(K.tf.Session(config=K.tf.ConfigProto(intra_op_â€Œâ€‹parallelism_threads=â€Œâ€‹4, inter_op_parallelism_threads=4)))
                                                                                    ^
SyntaxError: invalid character in identifier
]0;khalil_carsten@testboard: ~/TestBoard/scripts[01;32mkhalil_carsten@testboard[00m:[01;34m~/TestBoard/scripts[00m$ python3 single_test_lstm.py 
  File "single_test_lstm.py", line 23
    K.set_session(K.tf.Session(config=K.tf.ConfigProto(intra_op_â€Œâ€‹parallelism_threads=â€Œâ€‹4, inter_op_parallelism_threads=4)))
                                                                                    ^
SyntaxError: invalid character in identifier
]0;khalil_carsten@testboard: ~/TestBoard/scripts[01;32mkhalil_carsten@testboard[00m:[01;34m~/TestBoard/scripts[00m$ python3 single_test_lstm.py [3Pnano[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?1049h[22;0;0t[1;65r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[63;116H(B[0;7m[ Reading File ](B[m[63;115H(B[0;7m[ Read 93 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                                                                    single_test_lstm.py                                                                                                               [1;245H(B[m[64d(B[0;7m^G(B[m Get Help[18G(B[0;7m^O(B[m Write Out     (B[0;7m^W(B[m Where Is[52G(B[0;7m^K(B[m Cut Text[69G(B[0;7m^J(B[m Justify[86G(B[0;7m^C(B[m Cur Pos[103G(B[0;7mM-U(B[m Undo[64;120H(B[0;7mM-A(B[m Mark Text    (B[0;7mM-](B[m To Bracket   (B[0;7mM-â–²(B[m Previous     (B[0;7m^B(B[m Back[64;188H(B[0;7m^â—€(B[m Prev Word     (B[0;7m^A(B[m Home[64;222H(B[0;7m^P(B[m Prev Line[65d(B[0;7m^X(B[m Exit[65;18H(B[0;7m^R(B[m Read File     (B[0;7m^\(B[m Replace[52G(B[0;7m^U(B[m Uncut Text    (B[0;7m^T(B[m To Linter     (B[0;7m^_(B[m Go To Line    (B[0;7mM-E(B[m Redo[65;120H(B[0;7mM-6(B[m Copy Text    (B[0;7mM-W(B[m WhereIs Next (B[0;7mM-â–¼(B[m Next[65;171H(B[0;7m^F(B[m Forward[188G(B[0;7m^â–¶(B[m Next Word     (B[0;7m^E(B[m End[65;222H(B[0;7m^N(B[m Next Line[63d[3d(B[0;1m[36mimport[39m(B[m sys[4dsys.path.append((B[0;1m[32m'../'[39m(B[m)[6d(B[0;1m[36mfrom[39m(B[m keras (B[0;1m[36mimport[39m(B[m backend (B[0;1m[36mas[39m(B[m K[7d(B[0;1m[36mfrom[39m(B[m sklearn.preprocessing (B[0;1m[36mimport[39m(B[m MinMaxScaler[8d(B[0;1m[36mfrom[39m(B[m keras.models (B[0;1m[36mimport[39m(B[m Sequential[9d(B[0;1m[36mfrom[39m(B[m keras.layers (B[0;1m[36mimport[39m(B[m LSTM, Dense[10d(B[0;1m[36mfrom[39m(B[m testboard.stocks (B[0;1m[36mimport[39m(B[m Stocks[11d(B[0;1m[36mfrom[39m(B[m testboard.stocks (B[0;1m[36mimport[39m(B[m CLOSING, OPENING, MAX_PRICE, MIN_PRICE, MEAN_PRICE, VOLUME[12d(B[0;1m[36mfrom[39m(B[m hyperopt (B[0;1m[36mimport[39m(B[m hp, fmin, tpe, hp, STATUS_OK, Trials[13d(B[0;1m[36mimport[39m(B[m numpy[15dspace = {[16;5H(B[0;1m[32m'recurrent_dropout'[39m(B[m: hp.uniform((B[0;1m[32m'recurrent_dropout'[39m(B[m, 0, 1),[17;5H(B[0;1m[32m'batch_size'[39m(B[m: hp.choice((B[0;1m[32m'batch_size'[39m(B[m, [1, 2, 64, 128, 256, 512]),[18;5H(B[0;1m[32m'cells'[39m(B[m: hp.choice((B[0;1m[32m'cells'[39m(B[m, [1, 2, 16, 20, 50, 80, 100]),[19;5H(B[0;1m[32m'look_back_proportion'[39m(B[m: hp.choice((B[0;1m[32m'look_back_proportion'[39m(B[m, [25, 50, 75, 100]),[20;5H(B[0;1m[32m'nb_epochs'[39m(B[m :  5000,[21d}[23dstocks = Stocks(year=2015, cod=(B[0;1m[32m'VALE3'[39m(B[m, period=11)[24ddataset = stocks.selected_fields([CLOSING])[25dK.set_session(K.tf.Session(config=K.tf.ConfigProto(intra_op_â€Œâ€‹parallelism_threads=â€Œâ€‹4, inter_op_parallelism_threads=4)))[28d(B[0;1m[36mdef[34m label[39m(B[m(dataset, look_back_proportion, mean_of=0):[29;5H(B[0;1m[32m"""Nani."""[30;5H[39m(B[mdata_x, data_y = [], [][32;5Hscaler = MinMaxScaler(feature_range=(0, 1))[33;5Hdataset = scaler.fit_transform(dataset)[35;5Hlook_back = int(len(dataset)*0.3*(look_back_proportion/100))[37;5H(B[0;1m[36mfor[39m(B[m i (B[0;1m[36min[39m(B[m range(len(dataset)-look_back):[38;9Hday_t = dataset[i:(i+look_back)][39;9Hday_t1 = dataset[i + look_back][40;9Hdata_x.append(day_t)[41;9H(B[0;1m[36mif[39m(B[m day_t.mean(axis=mean_of)[mean_of] > day_t1[mean_of]:[42;13Hdata_y.append(0)[43;9H(B[0;1m[36melse[39m(B[m:[44ddata_y.append(1)[46;5H(B[0;1m[36mreturn[39m(B[m numpy.array(data_x), numpy.array(data_y), look_back[48d(B[0;1m[36mdef[34m create_data_set[39m(B[m(look_back_proportion):[50;5Htrain_proportion = 0.33[51;5Hdata_x, data_y, look_back = label(dataset, look_back_proportion)[52;5Htrain_size = int(len(dataset) * train_proportion)[54;5Htrain_x = data_x[0:train_size][55;5Htest_x = data_x[train_size:len(data_x)][56;5Htrain_y = data_y[0:train_size][57;5Htest_y = data_y[train_size:len(data_x)][59;5Htrain_x = numpy.reshape(train_x, (train_x.shape[0], train_x.shape[1],[60;39Htrain_x.shape[2]))[61;5Htest_x = numpy.reshape(test_x, (test_x.shape[0], test_x.shape[1],[62;37Htest_x.shape[2]))[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[22d[?12l[?25h[?25l[23d[?12l[?25h[?25l[24d[?12l[?25h[?25l[25d[?12l[?25h[?25l[26d[?12l[?25h[?25l[27d[?12l[?25h[?25l[28d[?12l[?25h[?25l[63d[K[29d[?12l[?25h[?25l[30d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25ld[?12l[?25h[?25la[?12l[?25h[?25lt[?12l[?25h[?25la[?12l[?25h[?25l_[?12l[?25h[?25lx[?12l[?25h[?25l,[?12l[?25h[?25l [?12l[?25h[?25ld[?12l[?25h[?25la[?12l[?25h[?25lt[?12l[?25h[?25la[?12l[?25h[?25l_[?12l[?25h[?25ly[?12l[?25h[?25l [?12l[?25h[?25l=[?12l[?25h[?25l [?12l[?25h[?25l[[?12l[?25h[?25l][?12l[?25h[?25l,[?12l[?25h[?25l [?12l[?25h[?25l[[?12l[?25h[?25l][?12l[?25h[?25l[31d[?12l[?25h[?25l[32d[?12l[?25h[?25l [?12l[?25h[?25l[A[?12l[?25h[?25l[A [?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[27d[?12l[?25h[?25l[28d[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[AK.s[?12l[?25h[?25le[?12l[?25h[?25lt[?12l[?25h[?25l_[?12l[?25h[?25ls[?12l[?25h[?25le[?12l[?25h[?25ls[?12l[?25h[?25ls[?12l[?25h[?25li[?12l[?25h[?25l[25;37H[?12l[?25h[?25lt[?12l[?25h[?25lf[?12l[?25h[?25l.[?12l[?25h[?25lC[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25lf[?12l[?25h[?25li[?12l[?25h[?25lg[?12l[?25h[?25lP[?12l[?25h[?25lr[?12l[?25h[?25lo[?12l[?25h[?25lt[?12l[?25h[?25lo[?12l[?25h[?25l([?12l[?25h[?25li[?12l[?25h[?25ln[?12l[?25h[?25lt[?12l[?25h[?25lr[?12l[?25h[?25la[?12l[?25h[?25l_[?12l[?25h[?25lo[?12l[?25h[?25lp[?12l[?25h[?25l[C[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25lp[?12l[?25h[?25la[?12l[?25h[?25lr[?12l[?25h[?25la[?12l[?25h[?25ll[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25ll[?12l[?25h[?25li[?12l[?25h[?25ls[?12l[?25h[?25lm[?12l[?25h[?25l_[?12l[?25h[?25lt[?12l[?25h[?25lh[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25la[?12l[?25h[?25ld[?12l[?25h[?25ls[?12l[?25h[?25l[C[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l4[?12l[?25h[?25l,[?12l[?25h[?25l [?12l[?25h[?25li[?12l[?25h[?25ln[?12l[?25h[?25lt[?12l[?25h[?25le[?12l[?25h[?25lr[?12l[?25h[?25l_[?12l[?25h[?25lo[?12l[?25h[?25lp[?12l[?25h[?25l_[?12l[?25h[?25lp[?12l[?25h[?25la[?12l[?25h[?25lr[?12l[?25h[?25la[?12l[?25h[?25ll[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25ll[?12l[?25h[?25li[?12l[?25h[?25ls[?12l[?25h[?25lm[?12l[?25h[?25l_[?12l[?25h[?25lt[?12l[?25h[?25lh[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25la[?12l[?25h[?25ld[?12l[?25h[?25ls[?12l[?25h[?25l=[?12l[?25h[?25l4[?12l[?25h[?25l)[?12l[?25h[?25l)[?12l[?25h[?25l)[?12l[?25h[?25l[26d[?12l[?25h[?25l[25;117H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25li[?12l[?25h[?25ls[?12l[?25h[?25lm[?12l[?25h[?25l_[?12l[?25h[?25lt[?12l[?25h[?25lh[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25la[?12l[?25h[?25ld[?12l[?25h[?25ls[?12l[?25h[?25l[C[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l4[?12l[?25h[?25l,[?12l[?25h[?25l [?12l[?25h[?25li[?12l[?25h[?25ln[?12l[?25h[?25lt[?12l[?25h[?25le[?12l[?25h[?25lr[?12l[?25h[?25l_[?12l[?25h[?25lo[?12l[?25h[?25lp[?12l[?25h[?25l_[?12l[?25h[?25lp[?12l[?25h[?25la[?12l[?25h[?25lr[?12l[?25h[?25la[?12l[?25h[?25ll[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25ll[?12l[?25h[?25li[?12l[?25h[?25ls[?12l[?25h[?25lm[?12l[?25h[?25l_[?12l[?25h[?25lt[?12l[?25h[?25lh[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25la[?12l[?25h[?25ld[?12l[?25h[?25ls[?12l[?25h[?25l=[?12l[?25h[?25l4[?12l[?25h[?25l)[?12l[?25h[?25l)[?12l[?25h[?25l)[?12l[?25h[?25l[26d[?12l[?25h[?25l[27d[?12l[?25h[?25l[28d[?12l[?25h[?25l[C[?12l[?25h[?25l[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[25;117H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[64d[J[65;246H[?12l[?25h[65;1H[?1049l[23;0;0t[?1l>]0;khalil_carsten@testboard: ~/TestBoard/scripts[01;32mkhalil_carsten@testboard[00m:[01;34m~/TestBoard/scripts[00m$ nano single_test_lstm.py [3@python3[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
  File "single_test_lstm.py", line 23
    K.set_session(K.tf.Session(config=K.tf.ConfigProto(intra_op_â€Œâ€‹parallelism_threads=â€Œâ€‹4, inter_op_parallelism_threads=4)))
                                                                                    ^
SyntaxError: invalid character in identifier
]0;khalil_carsten@testboard: ~/TestBoard/scripts[01;32mkhalil_carsten@testboard[00m:[01;34m~/TestBoard/scripts[00m$ python3 single_test_lstm.py [3Pnano[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?1049h[22;0;0t[1;65r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[63;116H(B[0;7m[ Reading File ](B[m[63;115H(B[0;7m[ Read 93 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                                                                    single_test_lstm.py                                                                                                               [1;245H(B[m[64d(B[0;7m^G(B[m Get Help[18G(B[0;7m^O(B[m Write Out     (B[0;7m^W(B[m Where Is[52G(B[0;7m^K(B[m Cut Text[69G(B[0;7m^J(B[m Justify[86G(B[0;7m^C(B[m Cur Pos[103G(B[0;7mM-U(B[m Undo[64;120H(B[0;7mM-A(B[m Mark Text    (B[0;7mM-](B[m To Bracket   (B[0;7mM-â–²(B[m Previous     (B[0;7m^B(B[m Back[64;188H(B[0;7m^â—€(B[m Prev Word     (B[0;7m^A(B[m Home[64;222H(B[0;7m^P(B[m Prev Line[65d(B[0;7m^X(B[m Exit[65;18H(B[0;7m^R(B[m Read File     (B[0;7m^\(B[m Replace[52G(B[0;7m^U(B[m Uncut Text    (B[0;7m^T(B[m To Linter     (B[0;7m^_(B[m Go To Line    (B[0;7mM-E(B[m Redo[65;120H(B[0;7mM-6(B[m Copy Text    (B[0;7mM-W(B[m WhereIs Next (B[0;7mM-â–¼(B[m Next[65;171H(B[0;7m^F(B[m Forward[188G(B[0;7m^â–¶(B[m Next Word     (B[0;7m^E(B[m End[65;222H(B[0;7m^N(B[m Next Line[63d[3d(B[0;1m[36mimport[39m(B[m sys[4dsys.path.append((B[0;1m[32m'../'[39m(B[m)[6d(B[0;1m[36mfrom[39m(B[m keras (B[0;1m[36mimport[39m(B[m backend (B[0;1m[36mas[39m(B[m K[7d(B[0;1m[36mfrom[39m(B[m sklearn.preprocessing (B[0;1m[36mimport[39m(B[m MinMaxScaler[8d(B[0;1m[36mfrom[39m(B[m keras.models (B[0;1m[36mimport[39m(B[m Sequential[9d(B[0;1m[36mfrom[39m(B[m keras.layers (B[0;1m[36mimport[39m(B[m LSTM, Dense[10d(B[0;1m[36mfrom[39m(B[m testboard.stocks (B[0;1m[36mimport[39m(B[m Stocks[11d(B[0;1m[36mfrom[39m(B[m testboard.stocks (B[0;1m[36mimport[39m(B[m CLOSING, OPENING, MAX_PRICE, MIN_PRICE, MEAN_PRICE, VOLUME[12d(B[0;1m[36mfrom[39m(B[m hyperopt (B[0;1m[36mimport[39m(B[m hp, fmin, tpe, hp, STATUS_OK, Trials[13d(B[0;1m[36mimport[39m(B[m numpy[15dspace = {[16;5H(B[0;1m[32m'recurrent_dropout'[39m(B[m: hp.uniform((B[0;1m[32m'recurrent_dropout'[39m(B[m, 0, 1),[17;5H(B[0;1m[32m'batch_size'[39m(B[m: hp.choice((B[0;1m[32m'batch_size'[39m(B[m, [1, 2, 64, 128, 256, 512]),[18;5H(B[0;1m[32m'cells'[39m(B[m: hp.choice((B[0;1m[32m'cells'[39m(B[m, [1, 2, 16, 20, 50, 80, 100]),[19;5H(B[0;1m[32m'look_back_proportion'[39m(B[m: hp.choice((B[0;1m[32m'look_back_proportion'[39m(B[m, [25, 50, 75, 100]),[20;5H(B[0;1m[32m'nb_epochs'[39m(B[m :  5000,[21d}[23dstocks = Stocks(year=2015, cod=(B[0;1m[32m'VALE3'[39m(B[m, period=11)[24ddataset = stocks.selected_fields([CLOSING])[25dK.set_session(K.tf.Session(config=K.tf.ConfigProto(intra_op_â€Œâ€‹parallelism_threads=â€Œâ€‹4, inter_op_parallelism_threads=4)))[28d(B[0;1m[36mdef[34m label[39m(B[m(dataset, look_back_proportion, mean_of=0):[29;5H(B[0;1m[32m"""Nani."""[30;5H[39m(B[mdata_x, data_y = [], [][32;5Hscaler = MinMaxScaler(feature_range=(0, 1))[33;5Hdataset = scaler.fit_transform(dataset)[35;5Hlook_back = int(len(dataset)*0.3*(look_back_proportion/100))[37;5H(B[0;1m[36mfor[39m(B[m i (B[0;1m[36min[39m(B[m range(len(dataset)-look_back):[38;9Hday_t = dataset[i:(i+look_back)][39;9Hday_t1 = dataset[i + look_back][40;9Hdata_x.append(day_t)[41;9H(B[0;1m[36mif[39m(B[m day_t.mean(axis=mean_of)[mean_of] > day_t1[mean_of]:[42;13Hdata_y.append(0)[43;9H(B[0;1m[36melse[39m(B[m:[44ddata_y.append(1)[46;5H(B[0;1m[36mreturn[39m(B[m numpy.array(data_x), numpy.array(data_y), look_back[48d(B[0;1m[36mdef[34m create_data_set[39m(B[m(look_back_proportion):[50;5Htrain_proportion = 0.33[51;5Hdata_x, data_y, look_back = label(dataset, look_back_proportion)[52;5Htrain_size = int(len(dataset) * train_proportion)[54;5Htrain_x = data_x[0:train_size][55;5Htest_x = data_x[train_size:len(data_x)][56;5Htrain_y = data_y[0:train_size][57;5Htest_y = data_y[train_size:len(data_x)][59;5Htrain_x = numpy.reshape(train_x, (train_x.shape[0], train_x.shape[1],[60;39Htrain_x.shape[2]))[61;5Htest_x = numpy.reshape(test_x, (test_x.shape[0], test_x.shape[1],[62;37Htest_x.shape[2]))[3d[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[63d[K[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[22d[?12l[?25h[?25l[23d[?12l[?25h[?25l[24d[?12l[?25h[?25l[25d[?12l[?25h[?25l[26d[?12l[?25h[?25l[27d[?12l[?25h[?25l[28d[?12l[?25h[?25l[29d[?12l[?25h[?25l[30d[?12l[?25h[?25l[31d[?12l[?25h[?25l[32d[?12l[?25h[?25l[33d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25ld[?12l[?25h[?25la[?12l[?25h[?25lt[?12l[?25h[?25la[?12l[?25h[?25ls[?12l[?25h[?25le[?12l[?25h[?25lt[?12l[?25h[?25l [?12l[?25h[?25l=[?12l[?25h[?25l [?12l[?25h[?25ls[?12l[?25h[?25lc[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[30;17H[?12l[?25h[?25l[A[?12l[?25h[?25l[Ae[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[25;17H[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A}[?12l[?25h[?25l[20;17H[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[15;10H[?12l[?25h[?25l[A[?12l[?25h[?25l[13;13H[?12l[?25h[?25l[12;17H[?12l[?25h[?25l[13;13H[?12l[?25h[?25l[14d[?12l[?25h[?25l[15;10H[?12l[?25h[?25l[16;17H[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d}[?12l[?25h[?25l[22d[?12l[?25h[?25l[23;17H[?12l[?25h[?25l[24d[?12l[?25h[?25l[25d[?12l[?25h[?25l[26d[?12l[?25h[?25l[27d[?12l[?25h[?25l[28d[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l([?12l[?25h[?25ld[?12l[?25h[?25la[?12l[?25h[?25lt[?12l[?25h[?25la[?12l[?25h[?25ls[?12l[?25h[?25le[?12l[?25h[?25lt[?12l[?25h[?25l,[?12l[?25h[?25l [?12l[?25h[?25ll[?12l[?25h[?25lo[?12l[?25h[?25lo[?12l[?25h[?25lk[?12l[?25h[?25l[A[?12l[?25h[?25l[28d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25lK[?12l[?25h[?25l.[?12l[?25h[?25ls[?12l[?25h[?25le[?12l[?25h[?25lt[?12l[?25h[?25l_[?12l[?25h[?25ls[?12l[?25h[?25le[?12l[?25h[?25ls[?12l[?25h[?25ls[?12l[?25h[?25li[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25l([?12l[?25h[?25lK[?12l[?25h[?25l.[?12l[?25h[?25lt[?12l[?25h[?25lf[?12l[?25h[?25l.[?12l[?25h[?25lS[?12l[?25h[?25le[?12l[?25h[?25ls[?12l[?25h[?25ls[?12l[?25h[?25li[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25l([?12l[?25h[?25lc[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25lf[?12l[?25h[?25li[?12l[?25h[?25lg[?12l[?25h[?25l=[?12l[?25h[?25lK[?12l[?25h[?25l.[?12l[?25h[?25lt[?12l[?25h[?25lf[?12l[?25h[?25l.[?12l[?25h[?25lC[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25lf[?12l[?25h[?25li[?12l[?25h[?25lg[?12l[?25h[?25lP[?12l[?25h[?25lr[?12l[?25h[?25lo[?12l[?25h[?25lt[?12l[?25h[?25lo[?12l[?25h[?25l([?12l[?25h[?25li[?12l[?25h[?25ln[?12l[?25h[?25lt[?12l[?25h[?25lr[?12l[?25h[?25la[?12l[?25h[?25l_[?12l[?25h[?25lo[?12l[?25h[?25lp[?12l[?25h[?25l[C[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25lp[?12l[?25h[?25la[?12l[?25h[?25lr[?12l[?25h[?25la[?12l[?25h[?25ll[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25ll[?12l[?25h[?25li[?12l[?25h[?25ls[?12l[?25h[?25lm[?12l[?25h[?25l_[?12l[?25h[?25lt[?12l[?25h[?25lh[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25la[?12l[?25h[?25ld[?12l[?25h[?25ls[?12l[?25h[?25l[C[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l4[?12l[?25h[?25l,[?12l[?25h[?25l [?12l[?25h[?25li[?12l[?25h[?25ln[?12l[?25h[?25lt[?12l[?25h[?25le[?12l[?25h[?25lr[?12l[?25h[?25l_[?12l[?25h[?25lo[?12l[?25h[?25lp[?12l[?25h[?25l_[?12l[?25h[?25lp[?12l[?25h[?25la[?12l[?25h[?25lr[?12l[?25h[?25la[?12l[?25h[?25ll[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25ll[?12l[?25h[?25li[?12l[?25h[?25ls[?12l[?25h[?25lm[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;237H(B[0;7mModified(B[m[25;81H[1P[?12l[?25h[?25l8, inter_op_parallelism_threads=4)))[25;82H[?12l[?25h[?25l,[?12l[?25h[?25l [?12l[?25h[?25li[?12l[?25h[?25ln[?12l[?25h[?25lt[?12l[?25h[?25le[?12l[?25h[?25lr[?12l[?25h[?25l_[?12l[?25h[?25lo[?12l[?25h[?25lp[?12l[?25h[?25l_[?12l[?25h[?25lp[?12l[?25h[?25la[?12l[?25h[?25lr[?12l[?25h[?25la[?12l[?25h[?25ll[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25ll[?12l[?25h[?25li[?12l[?25h[?25ls[?12l[?25h[?25lm[?12l[?25h[?25l_[?12l[?25h[?25lt[?12l[?25h[?25lh[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25la[?12l[?25h[?25ld[?12l[?25h[?25ls[?12l[?25h[?25l=[?12l[?25h[?25l4[?12l[?25h[?25l)[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l4[?12l[?25h[?25l)))[K[?12l[?25h[?25l8)))[?12l[?25h[?25l[63d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                                                                                                                         [64;1H Y(B[m Yes[K[65d(B[0;7m N(B[m No  [65;17H(B[0;7m^C(B[m Cancel[K[63;63H[?12l[?25h[?25l[64d(B[0;7m^G(B[m Get Help[64;62H(B[0;7mM-D(B[m DOS Format[64;123H(B[0;7mM-A(B[m Append[64;184H(B[0;7mM-B(B[m Backup File[65d(B[0;7m^C(B[m Cancel[17G         [65;62H(B[0;7mM-M(B[m Mac Format[65;123H(B[0;7mM-P(B[m Prepend[65;184H(B[0;7m^T(B[m To Files[63d(B[0;7mFile Name to Write: single_test_lstm.py                      (B[m[63;40H[?12l[?25h[?25l[K[1;245H[1;237H(B[0;7m        (B[m[63;115H(B[0;7m[ Wrote 93 lines ](B[m[J[65;246H[?12l[?25h[65;1H[?1049l[23;0;0t[?1l>]0;khalil_carsten@testboard: ~/TestBoard/scripts[01;32mkhalil_carsten@testboard[00m:[01;34m~/TestBoard/scripts[00m$ nano single_test_lstm.py [3@python3[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
  File "single_test_lstm.py", line 23
    K.set_session(K.tf.Session(config=K.tf.ConfigProto(intra_op_â€Œâ€‹parallelism_threads=â€Œâ€‹8, inter_op_parallelism_threads=8)))
                                                                                    ^
SyntaxError: invalid character in identifier
]0;khalil_carsten@testboard: ~/TestBoard/scripts[01;32mkhalil_carsten@testboard[00m:[01;34m~/TestBoard/scripts[00m$ python3 single_test_lstm.py [3Pnano[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?1049h[22;0;0t[1;65r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[63;116H(B[0;7m[ Reading File ](B[m[63;115H(B[0;7m[ Read 93 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                                                                    single_test_lstm.py                                                                                                               [1;245H(B[m[64d(B[0;7m^G(B[m Get Help[18G(B[0;7m^O(B[m Write Out     (B[0;7m^W(B[m Where Is[52G(B[0;7m^K(B[m Cut Text[69G(B[0;7m^J(B[m Justify[86G(B[0;7m^C(B[m Cur Pos[103G(B[0;7mM-U(B[m Undo[64;120H(B[0;7mM-A(B[m Mark Text    (B[0;7mM-](B[m To Bracket   (B[0;7mM-â–²(B[m Previous     (B[0;7m^B(B[m Back[64;188H(B[0;7m^â—€(B[m Prev Word     (B[0;7m^A(B[m Home[64;222H(B[0;7m^P(B[m Prev Line[65d(B[0;7m^X(B[m Exit[65;18H(B[0;7m^R(B[m Read File     (B[0;7m^\(B[m Replace[52G(B[0;7m^U(B[m Uncut Text    (B[0;7m^T(B[m To Linter     (B[0;7m^_(B[m Go To Line    (B[0;7mM-E(B[m Redo[65;120H(B[0;7mM-6(B[m Copy Text    (B[0;7mM-W(B[m WhereIs Next (B[0;7mM-â–¼(B[m Next[65;171H(B[0;7m^F(B[m Forward[188G(B[0;7m^â–¶(B[m Next Word     (B[0;7m^E(B[m End[65;222H(B[0;7m^N(B[m Next Line[63d[3d(B[0;1m[36mimport[39m(B[m sys[4dsys.path.append((B[0;1m[32m'../'[39m(B[m)[6d(B[0;1m[36mfrom[39m(B[m keras (B[0;1m[36mimport[39m(B[m backend (B[0;1m[36mas[39m(B[m K[7d(B[0;1m[36mfrom[39m(B[m sklearn.preprocessing (B[0;1m[36mimport[39m(B[m MinMaxScaler[8d(B[0;1m[36mfrom[39m(B[m keras.models (B[0;1m[36mimport[39m(B[m Sequential[9d(B[0;1m[36mfrom[39m(B[m keras.layers (B[0;1m[36mimport[39m(B[m LSTM, Dense[10d(B[0;1m[36mfrom[39m(B[m testboard.stocks (B[0;1m[36mimport[39m(B[m Stocks[11d(B[0;1m[36mfrom[39m(B[m testboard.stocks (B[0;1m[36mimport[39m(B[m CLOSING, OPENING, MAX_PRICE, MIN_PRICE, MEAN_PRICE, VOLUME[12d(B[0;1m[36mfrom[39m(B[m hyperopt (B[0;1m[36mimport[39m(B[m hp, fmin, tpe, hp, STATUS_OK, Trials[13d(B[0;1m[36mimport[39m(B[m numpy[15dspace = {[16;5H(B[0;1m[32m'recurrent_dropout'[39m(B[m: hp.uniform((B[0;1m[32m'recurrent_dropout'[39m(B[m, 0, 1),[17;5H(B[0;1m[32m'batch_size'[39m(B[m: hp.choice((B[0;1m[32m'batch_size'[39m(B[m, [1, 2, 64, 128, 256, 512]),[18;5H(B[0;1m[32m'cells'[39m(B[m: hp.choice((B[0;1m[32m'cells'[39m(B[m, [1, 2, 16, 20, 50, 80, 100]),[19;5H(B[0;1m[32m'look_back_proportion'[39m(B[m: hp.choice((B[0;1m[32m'look_back_proportion'[39m(B[m, [25, 50, 75, 100]),[20;5H(B[0;1m[32m'nb_epochs'[39m(B[m :  5000,[21d}[23dstocks = Stocks(year=2015, cod=(B[0;1m[32m'VALE3'[39m(B[m, period=11)[24ddataset = stocks.selected_fields([CLOSING])[25dK.set_session(K.tf.Session(config=K.tf.ConfigProto(intra_op_â€Œâ€‹parallelism_threads=â€Œâ€‹8, inter_op_parallelism_threads=8)))[28d(B[0;1m[36mdef[34m label[39m(B[m(dataset, look_back_proportion, mean_of=0):[29;5H(B[0;1m[32m"""Nani."""[30;5H[39m(B[mdata_x, data_y = [], [][32;5Hscaler = MinMaxScaler(feature_range=(0, 1))[33;5Hdataset = scaler.fit_transform(dataset)[35;5Hlook_back = int(len(dataset)*0.3*(look_back_proportion/100))[37;5H(B[0;1m[36mfor[39m(B[m i (B[0;1m[36min[39m(B[m range(len(dataset)-look_back):[38;9Hday_t = dataset[i:(i+look_back)][39;9Hday_t1 = dataset[i + look_back][40;9Hdata_x.append(day_t)[41;9H(B[0;1m[36mif[39m(B[m day_t.mean(axis=mean_of)[mean_of] > day_t1[mean_of]:[42;13Hdata_y.append(0)[43;9H(B[0;1m[36melse[39m(B[m:[44ddata_y.append(1)[46;5H(B[0;1m[36mreturn[39m(B[m numpy.array(data_x), numpy.array(data_y), look_back[48d(B[0;1m[36mdef[34m create_data_set[39m(B[m(look_back_proportion):[50;5Htrain_proportion = 0.33[51;5Hdata_x, data_y, look_back = label(dataset, look_back_proportion)[52;5Htrain_size = int(len(dataset) * train_proportion)[54;5Htrain_x = data_x[0:train_size][55;5Htest_x = data_x[train_size:len(data_x)][56;5Htrain_y = data_y[0:train_size][57;5Htest_y = data_y[train_size:len(data_x)][59;5Htrain_x = numpy.reshape(train_x, (train_x.shape[0], train_x.shape[1],[60;39Htrain_x.shape[2]))[61;5Htest_x = numpy.reshape(test_x, (test_x.shape[0], test_x.shape[1],[62;37Htest_x.shape[2]))[3d[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[4d[?12l[?25h[?25l[63d[K[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[22d[?12l[?25h[?25l[23d[?12l[?25h[?25l[24d[?12l[?25h[?25l[25d[?12l[?25h[?25l[26d[?12l[?25h[?25l[27d[?12l[?25h[?25l[28d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25lK[?12l[?25h[?25l.[?12l[?25h[?25ls[?12l[?25h[?25le[?12l[?25h[?25lt[?12l[?25h[?25l_[?12l[?25h[?25ls[?12l[?25h[?25le[?12l[?25h[?25ls[?12l[?25h[?25ls[?12l[?25h[?25li[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25l([?12l[?25h[?25lK[?12l[?25h[?25l.[?12l[?25h[?25lt[?12l[?25h[?25lf[?12l[?25h[?25l.[?12l[?25h[?25lS[?12l[?25h[?25le[?12l[?25h[?25ls[?12l[?25h[?25ls[?12l[?25h[?25li[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25l([?12l[?25h[?25lc[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25lf[?12l[?25h[?25li[?12l[?25h[?25lg[?12l[?25h[?25l=[?12l[?25h[?25lK[?12l[?25h[?25l.[?12l[?25h[?25lt[?12l[?25h[?25lf[?12l[?25h[?25l.[?12l[?25h[?25lC[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25lf[?12l[?25h[?25li[?12l[?25h[?25lg[?12l[?25h[?25lP[?12l[?25h[?25lr[?12l[?25h[?25lo[?12l[?25h[?25lt[?12l[?25h[?25lo[?12l[?25h[?25l([?12l[?25h[?25li[?12l[?25h[?25ln[?12l[?25h[?25lt[?12l[?25h[?25lr[?12l[?25h[?25la[?12l[?25h[?25l_[?12l[?25h[?25lo[?12l[?25h[?25lp[?12l[?25h[?25l[C[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25lp[?12l[?25h[?25la[?12l[?25h[?25lr[?12l[?25h[?25la[?12l[?25h[?25ll[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25ll[?12l[?25h[?25li[?12l[?25h[?25ls[?12l[?25h[?25lm[?12l[?25h[?25l_[?12l[?25h[?25lt[?12l[?25h[?25lh[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25la[?12l[?25h[?25lds[?12l[?25h[?25l[C[?12l[?25h[?25l[?12l[?25h[?25l8[?12l[?25h[?25l,[?12l[?25h[?25l [?12l[?25h[?25lin[?12l[?25h[?25lt[?12l[?25h[?25le[?12l[?25h[?25lr[?12l[?25h[?25l_[?12l[?25h[?25lo[?12l[?25h[?25lp[?12l[?25h[?25l_[?12l[?25h[?25lp[?12l[?25h[?25la[?12l[?25h[?25lr[?12l[?25h[?25la[?12l[?25h[?25ll[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25ll[?12l[?25h[?25li[?12l[?25h[?25ls[?12l[?25h[?25lm[?12l[?25h[?25l_[?12l[?25h[?25lt[?12l[?25h[?25lh[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25la[?12l[?25h[?25ld[?12l[?25h[?25ls[?12l[?25h[?25l=[?12l[?25h[?25l8[?12l[?25h[?25l)[?12l[?25h[?25l)[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;237H(B[0;7mModified(B[m[25;113H)))[K[?12l[?25h[?25l4)))[?12l[?25h[?25l3)))[?12l[?25h[?25l)))[K[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[26d[?12l[?25h[?25l[27d[?12l[?25h[?25l[A[?12l[?25h[?25l[25;117H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l8[?12l[?25h[?25l[1P[?12l[?25h[?25l=â€Œ[?12l[?25h[?25l=, inter_op_parallelism_threads=4)))[25;82H[?12l[?25h[?25l4, inter_op_parallelism_threads=4)))[25;83H[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l=[?12l[?25h[?25l==, inter_op_parallelism_threads=4)))[25;82H[?12l[?25h[?25l4, inter_op_parallelism_threads=4)))[25;83H[?12l[?25h[?25l[63d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                                                                                                                         [64;1H Y(B[m Yes[K[65d(B[0;7m N(B[m No  [65;17H(B[0;7m^C(B[m Cancel[K[63;63H[?12l[?25h[?25l[?12l[?25h[?25l[64d(B[0;7m^G(B[m Get Help[64;62H(B[0;7mM-D(B[m DOS Format[64;123H(B[0;7mM-A(B[m Append[64;184H(B[0;7mM-B(B[m Backup File[65d(B[0;7m^C(B[m Cancel[17G         [65;62H(B[0;7mM-M(B[m Mac Format[65;123H(B[0;7mM-P(B[m Prepend[65;184H(B[0;7m^T(B[m To Files[63d(B[0;7mFile Name to Write: single_test_lstm.py                      (B[m[63;40H[?12l[?25h[?25l[K[1;245H[1;237H(B[0;7m        (B[m[63;115H(B[0;7m[ Wrote 93 lines ](B[m[J[65;246H[?12l[?25h[65;1H[?1049l[23;0;0t[?1l>]0;khalil_carsten@testboard: ~/TestBoard/scripts[01;32mkhalil_carsten@testboard[00m:[01;34m~/TestBoard/scripts[00m$ nano single_test_lstm.py [3@python3[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
  File "single_test_lstm.py", line 23
    K.set_session(K.tf.Session(config=K.tf.ConfigProto(intra_op_â€Œâ€‹parallelism_threads==4, inter_op_parallelism_threads=4)))
                                                                                    ^
SyntaxError: invalid character in identifier
]0;khalil_carsten@testboard: ~/TestBoard/scripts[01;32mkhalil_carsten@testboard[00m:[01;34m~/TestBoard/scripts[00m$ python3 single_test_lstm.py [3Pnano[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?1049h[22;0;0t[1;65r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[63;116H(B[0;7m[ Reading File ](B[m[63;115H(B[0;7m[ Read 93 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                                                                    single_test_lstm.py                                                                                                               [1;245H(B[m[64d(B[0;7m^G(B[m Get Help[18G(B[0;7m^O(B[m Write Out     (B[0;7m^W(B[m Where Is[52G(B[0;7m^K(B[m Cut Text[69G(B[0;7m^J(B[m Justify[86G(B[0;7m^C(B[m Cur Pos[103G(B[0;7mM-U(B[m Undo[64;120H(B[0;7mM-A(B[m Mark Text    (B[0;7mM-](B[m To Bracket   (B[0;7mM-â–²(B[m Previous     (B[0;7m^B(B[m Back[64;188H(B[0;7m^â—€(B[m Prev Word     (B[0;7m^A(B[m Home[64;222H(B[0;7m^P(B[m Prev Line[65d(B[0;7m^X(B[m Exit[65;18H(B[0;7m^R(B[m Read File     (B[0;7m^\(B[m Replace[52G(B[0;7m^U(B[m Uncut Text    (B[0;7m^T(B[m To Linter     (B[0;7m^_(B[m Go To Line    (B[0;7mM-E(B[m Redo[65;120H(B[0;7mM-6(B[m Copy Text    (B[0;7mM-W(B[m WhereIs Next (B[0;7mM-â–¼(B[m Next[65;171H(B[0;7m^F(B[m Forward[188G(B[0;7m^â–¶(B[m Next Word     (B[0;7m^E(B[m End[65;222H(B[0;7m^N(B[m Next Line[63d[3d(B[0;1m[36mimport[39m(B[m sys[4dsys.path.append((B[0;1m[32m'../'[39m(B[m)[6d(B[0;1m[36mfrom[39m(B[m keras (B[0;1m[36mimport[39m(B[m backend (B[0;1m[36mas[39m(B[m K[7d(B[0;1m[36mfrom[39m(B[m sklearn.preprocessing (B[0;1m[36mimport[39m(B[m MinMaxScaler[8d(B[0;1m[36mfrom[39m(B[m keras.models (B[0;1m[36mimport[39m(B[m Sequential[9d(B[0;1m[36mfrom[39m(B[m keras.layers (B[0;1m[36mimport[39m(B[m LSTM, Dense[10d(B[0;1m[36mfrom[39m(B[m testboard.stocks (B[0;1m[36mimport[39m(B[m Stocks[11d(B[0;1m[36mfrom[39m(B[m testboard.stocks (B[0;1m[36mimport[39m(B[m CLOSING, OPENING, MAX_PRICE, MIN_PRICE, MEAN_PRICE, VOLUME[12d(B[0;1m[36mfrom[39m(B[m hyperopt (B[0;1m[36mimport[39m(B[m hp, fmin, tpe, hp, STATUS_OK, Trials[13d(B[0;1m[36mimport[39m(B[m numpy[15dspace = {[16;5H(B[0;1m[32m'recurrent_dropout'[39m(B[m: hp.uniform((B[0;1m[32m'recurrent_dropout'[39m(B[m, 0, 1),[17;5H(B[0;1m[32m'batch_size'[39m(B[m: hp.choice((B[0;1m[32m'batch_size'[39m(B[m, [1, 2, 64, 128, 256, 512]),[18;5H(B[0;1m[32m'cells'[39m(B[m: hp.choice((B[0;1m[32m'cells'[39m(B[m, [1, 2, 16, 20, 50, 80, 100]),[19;5H(B[0;1m[32m'look_back_proportion'[39m(B[m: hp.choice((B[0;1m[32m'look_back_proportion'[39m(B[m, [25, 50, 75, 100]),[20;5H(B[0;1m[32m'nb_epochs'[39m(B[m :  5000,[21d}[23dstocks = Stocks(year=2015, cod=(B[0;1m[32m'VALE3'[39m(B[m, period=11)[24ddataset = stocks.selected_fields([CLOSING])[25dK.set_session(K.tf.Session(config=K.tf.ConfigProto(intra_op_â€Œâ€‹parallelism_threads==4, inter_op_parallelism_threads=4)))[28d(B[0;1m[36mdef[34m label[39m(B[m(dataset, look_back_proportion, mean_of=0):[29;5H(B[0;1m[32m"""Nani."""[30;5H[39m(B[mdata_x, data_y = [], [][32;5Hscaler = MinMaxScaler(feature_range=(0, 1))[33;5Hdataset = scaler.fit_transform(dataset)[35;5Hlook_back = int(len(dataset)*0.3*(look_back_proportion/100))[37;5H(B[0;1m[36mfor[39m(B[m i (B[0;1m[36min[39m(B[m range(len(dataset)-look_back):[38;9Hday_t = dataset[i:(i+look_back)][39;9Hday_t1 = dataset[i + look_back][40;9Hdata_x.append(day_t)[41;9H(B[0;1m[36mif[39m(B[m day_t.mean(axis=mean_of)[mean_of] > day_t1[mean_of]:[42;13Hdata_y.append(0)[43;9H(B[0;1m[36melse[39m(B[m:[44ddata_y.append(1)[46;5H(B[0;1m[36mreturn[39m(B[m numpy.array(data_x), numpy.array(data_y), look_back[48d(B[0;1m[36mdef[34m create_data_set[39m(B[m(look_back_proportion):[50;5Htrain_proportion = 0.33[51;5Hdata_x, data_y, look_back = label(dataset, look_back_proportion)[52;5Htrain_size = int(len(dataset) * train_proportion)[54;5Htrain_x = data_x[0:train_size][55;5Htest_x = data_x[train_size:len(data_x)][56;5Htrain_y = data_y[0:train_size][57;5Htest_y = data_y[train_size:len(data_x)][59;5Htrain_x = numpy.reshape(train_x, (train_x.shape[0], train_x.shape[1],[60;39Htrain_x.shape[2]))[61;5Htest_x = numpy.reshape(test_x, (test_x.shape[0], test_x.shape[1],[62;37Htest_x.shape[2]))[3d[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[63d[K[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[22d[?12l[?25h[?25l[23d[?12l[?25h[?25l[24d[?12l[?25h[?25l[25d[?12l[?25h[?25l[26d[?12l[?25h[?25l[27d[?12l[?25h[?25l[28d[?12l[?25h[?25l[29d[?12l[?25h[?25l[30d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[21d[?12l[?25h[?25l[22d[?12l[?25h[?25l[23d[?12l[?25h[?25l[24d[?12l[?25h[?25l[25d[?12l[?25h[?25lK[?12l[?25h[?25l.[?12l[?25h[?25ls[?12l[?25h[?25le[?12l[?25h[?25lt[?12l[?25h[?25l_[?12l[?25h[?25ls[?12l[?25h[?25le[?12l[?25h[?25ls[?12l[?25h[?25ls[?12l[?25h[?25li[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25l([?12l[?25h[?25lK[?12l[?25h[?25l.[?12l[?25h[?25lt[?12l[?25h[?25lf[?12l[?25h[?25l.[?12l[?25h[?25lS[?12l[?25h[?25le[?12l[?25h[?25ls[?12l[?25h[?25ls[?12l[?25h[?25li[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25l([?12l[?25h[?25lc[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25lf[?12l[?25h[?25li[?12l[?25h[?25lg[?12l[?25h[?25l=[?12l[?25h[?25lK[?12l[?25h[?25l.[?12l[?25h[?25lt[?12l[?25h[?25lf[?12l[?25h[?25l.[?12l[?25h[?25lC[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25lf[?12l[?25h[?25li[?12l[?25h[?25lg[?12l[?25h[?25lP[?12l[?25h[?25lr[?12l[?25h[?25lo[?12l[?25h[?25lt[?12l[?25h[?25lo[?12l[?25h[?25l([?12l[?25h[?25li[?12l[?25h[?25ln[?12l[?25h[?25lt[?12l[?25h[?25lr[?12l[?25h[?25la[?12l[?25h[?25l_[?12l[?25h[?25lo[?12l[?25h[?25lp[?12l[?25h[?25l[C[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25lp[?12l[?25h[?25la[?12l[?25h[?25lr[?12l[?25h[?25la[?12l[?25h[?25ll[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25ll[?12l[?25h[?25li[?12l[?25h[?25ls[?12l[?25h[?25lm[?12l[?25h[?25l_[?12l[?25h[?25lt[?12l[?25h[?25lh[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25la[?12l[?25h[?25ld[?12l[?25h[?25ls[?12l[?25h[?25l=[?12l[?25h[?25l[1;237H(B[0;7mModified(B[m[25;80H[1P[?12l[?25h[?25l[63d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                                                                                                                         [64;1H Y(B[m Yes[K[65d(B[0;7m N(B[m No  [65;17H(B[0;7m^C(B[m Cancel[K[63;63H[?12l[?25h[?25l[64d(B[0;7m^G(B[m Get Help[64;62H(B[0;7mM-D(B[m DOS Format[64;123H(B[0;7mM-A(B[m Append[64;184H(B[0;7mM-B(B[m Backup File[65d(B[0;7m^C(B[m Cancel[17G         [65;62H(B[0;7mM-M(B[m Mac Format[65;123H(B[0;7mM-P(B[m Prepend[65;184H(B[0;7m^T(B[m To Files[63d(B[0;7mFile Name to Write: single_test_lstm.py                      (B[m[63;40H[?12l[?25h[?25l[K[1;245H[1;237H(B[0;7m        (B[m[63;115H(B[0;7m[ Wrote 93 lines ](B[m[J[65;246H[?12l[?25h[65;1H[?1049l[23;0;0t[?1l>]0;khalil_carsten@testboard: ~/TestBoard/scripts[01;32mkhalil_carsten@testboard[00m:[01;34m~/TestBoard/scripts[00m$ nano single_test_lstm.py [3@python3[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
  File "single_test_lstm.py", line 23
    K.set_session(K.tf.Session(config=K.tf.ConfigProto(intra_op_â€Œâ€‹parallelism_threads=4, inter_op_parallelism_threads=4)))
                                                                                    ^
SyntaxError: invalid character in identifier
]0;khalil_carsten@testboard: ~/TestBoard/scripts[01;32mkhalil_carsten@testboard[00m:[01;34m~/TestBoard/scripts[00m$ python3 single_test_lstm.py [3Pnano[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?1049h[22;0;0t[1;65r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[63;116H(B[0;7m[ Reading File ](B[m[63;115H(B[0;7m[ Read 93 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                                                                    single_test_lstm.py                                                                                                               [1;245H(B[m[64d(B[0;7m^G(B[m Get Help[18G(B[0;7m^O(B[m Write Out     (B[0;7m^W(B[m Where Is[52G(B[0;7m^K(B[m Cut Text[69G(B[0;7m^J(B[m Justify[86G(B[0;7m^C(B[m Cur Pos[103G(B[0;7mM-U(B[m Undo[64;120H(B[0;7mM-A(B[m Mark Text    (B[0;7mM-](B[m To Bracket   (B[0;7mM-â–²(B[m Previous     (B[0;7m^B(B[m Back[64;188H(B[0;7m^â—€(B[m Prev Word     (B[0;7m^A(B[m Home[64;222H(B[0;7m^P(B[m Prev Line[65d(B[0;7m^X(B[m Exit[65;18H(B[0;7m^R(B[m Read File     (B[0;7m^\(B[m Replace[52G(B[0;7m^U(B[m Uncut Text    (B[0;7m^T(B[m To Linter     (B[0;7m^_(B[m Go To Line    (B[0;7mM-E(B[m Redo[65;120H(B[0;7mM-6(B[m Copy Text    (B[0;7mM-W(B[m WhereIs Next (B[0;7mM-â–¼(B[m Next[65;171H(B[0;7m^F(B[m Forward[188G(B[0;7m^â–¶(B[m Next Word     (B[0;7m^E(B[m End[65;222H(B[0;7m^N(B[m Next Line[63d[3d(B[0;1m[36mimport[39m(B[m sys[4dsys.path.append((B[0;1m[32m'../'[39m(B[m)[6d(B[0;1m[36mfrom[39m(B[m keras (B[0;1m[36mimport[39m(B[m backend (B[0;1m[36mas[39m(B[m K[7d(B[0;1m[36mfrom[39m(B[m sklearn.preprocessing (B[0;1m[36mimport[39m(B[m MinMaxScaler[8d(B[0;1m[36mfrom[39m(B[m keras.models (B[0;1m[36mimport[39m(B[m Sequential[9d(B[0;1m[36mfrom[39m(B[m keras.layers (B[0;1m[36mimport[39m(B[m LSTM, Dense[10d(B[0;1m[36mfrom[39m(B[m testboard.stocks (B[0;1m[36mimport[39m(B[m Stocks[11d(B[0;1m[36mfrom[39m(B[m testboard.stocks (B[0;1m[36mimport[39m(B[m CLOSING, OPENING, MAX_PRICE, MIN_PRICE, MEAN_PRICE, VOLUME[12d(B[0;1m[36mfrom[39m(B[m hyperopt (B[0;1m[36mimport[39m(B[m hp, fmin, tpe, hp, STATUS_OK, Trials[13d(B[0;1m[36mimport[39m(B[m numpy[15dspace = {[16;5H(B[0;1m[32m'recurrent_dropout'[39m(B[m: hp.uniform((B[0;1m[32m'recurrent_dropout'[39m(B[m, 0, 1),[17;5H(B[0;1m[32m'batch_size'[39m(B[m: hp.choice((B[0;1m[32m'batch_size'[39m(B[m, [1, 2, 64, 128, 256, 512]),[18;5H(B[0;1m[32m'cells'[39m(B[m: hp.choice((B[0;1m[32m'cells'[39m(B[m, [1, 2, 16, 20, 50, 80, 100]),[19;5H(B[0;1m[32m'look_back_proportion'[39m(B[m: hp.choice((B[0;1m[32m'look_back_proportion'[39m(B[m, [25, 50, 75, 100]),[20;5H(B[0;1m[32m'nb_epochs'[39m(B[m :  5000,[21d}[23dstocks = Stocks(year=2015, cod=(B[0;1m[32m'VALE3'[39m(B[m, period=11)[24ddataset = stocks.selected_fields([CLOSING])[25dK.set_session(K.tf.Session(config=K.tf.ConfigProto(intra_op_â€Œâ€‹parallelism_threads=4, inter_op_parallelism_threads=4)))[28d(B[0;1m[36mdef[34m label[39m(B[m(dataset, look_back_proportion, mean_of=0):[29;5H(B[0;1m[32m"""Nani."""[30;5H[39m(B[mdata_x, data_y = [], [][32;5Hscaler = MinMaxScaler(feature_range=(0, 1))[33;5Hdataset = scaler.fit_transform(dataset)[35;5Hlook_back = int(len(dataset)*0.3*(look_back_proportion/100))[37;5H(B[0;1m[36mfor[39m(B[m i (B[0;1m[36min[39m(B[m range(len(dataset)-look_back):[38;9Hday_t = dataset[i:(i+look_back)][39;9Hday_t1 = dataset[i + look_back][40;9Hdata_x.append(day_t)[41;9H(B[0;1m[36mif[39m(B[m day_t.mean(axis=mean_of)[mean_of] > day_t1[mean_of]:[42;13Hdata_y.append(0)[43;9H(B[0;1m[36melse[39m(B[m:[44ddata_y.append(1)[46;5H(B[0;1m[36mreturn[39m(B[m numpy.array(data_x), numpy.array(data_y), look_back[48d(B[0;1m[36mdef[34m create_data_set[39m(B[m(look_back_proportion):[50;5Htrain_proportion = 0.33[51;5Hdata_x, data_y, look_back = label(dataset, look_back_proportion)[52;5Htrain_size = int(len(dataset) * train_proportion)[54;5Htrain_x = data_x[0:train_size][55;5Htest_x = data_x[train_size:len(data_x)][56;5Htrain_y = data_y[0:train_size][57;5Htest_y = data_y[train_size:len(data_x)][59;5Htrain_x = numpy.reshape(train_x, (train_x.shape[0], train_x.shape[1],[60;39Htrain_x.shape[2]))[61;5Htest_x = numpy.reshape(test_x, (test_x.shape[0], test_x.shape[1],[62;37Htest_x.shape[2]))[3d[?12l[?25h[?25l[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[22d[?12l[?25h[?25l[23d[?12l[?25h[?25l[24d[?12l[?25h[?25l[25d[?12l[?25h[?25l[26d[?12l[?25h[?25l[27d[?12l[?25h[?25l[63d[K[26d[?12l[?25h[?25l[A[?12l[?25h[?25lK[?12l[?25h[?25l.[?12l[?25h[?25ls[?12l[?25h[?25le[?12l[?25h[?25lt[?12l[?25h[?25l_[?12l[?25h[?25ls[?12l[?25h[?25le[?12l[?25h[?25ls[?12l[?25h[?25ls[?12l[?25h[?25li[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25l([?12l[?25h[?25lK[?12l[?25h[?25l.[?12l[?25h[?25lt[?12l[?25h[?25lf[?12l[?25h[?25l.[?12l[?25h[?25lS[?12l[?25h[?25le[?12l[?25h[?25ls[?12l[?25h[?25ls[?12l[?25h[?25li[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25l([?12l[?25h[?25lc[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25lf[?12l[?25h[?25li[?12l[?25h[?25lg[?12l[?25h[?25l=[?12l[?25h[?25lK[?12l[?25h[?25l.[?12l[?25h[?25lt[?12l[?25h[?25lf[?12l[?25h[?25l.[?12l[?25h[?25lC[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25lf[?12l[?25h[?25li[?12l[?25h[?25lg[?12l[?25h[?25lP[?12l[?25h[?25lr[?12l[?25h[?25lo[?12l[?25h[?25lt[?12l[?25h[?25lo[?12l[?25h[?25l([?12l[?25h[?25li[?12l[?25h[?25ln[?12l[?25h[?25lt[?12l[?25h[?25lr[?12l[?25h[?25la[?12l[?25h[?25l_[?12l[?25h[?25lo[?12l[?25h[?25lp[?12l[?25h[?25l[C[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25lp[?12l[?25h[?25la[?12l[?25h[?25lr[?12l[?25h[?25la[?12l[?25h[?25ll[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25ll[?12l[?25h[?25li[?12l[?25h[?25ls[?12l[?25h[?25lm[?12l[?25h[?25l_[?12l[?25h[?25lt[?12l[?25h[?25lh[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25la[?12l[?25h[?25ld[?12l[?25h[?25ls[?12l[?25h[?25l=[?12l[?25h[?25l4[?12l[?25h[?25l,[?12l[?25h[?25l [?12l[?25h[?25li[?12l[?25h[?25ln[?12l[?25h[?25lt[?12l[?25h[?25le[?12l[?25h[?25lr[?12l[?25h[?25l_[?12l[?25h[?25lo[?12l[?25h[?25lp[?12l[?25h[?25l_[?12l[?25h[?25lp[?12l[?25h[?25la[?12l[?25h[?25lr[?12l[?25h[?25la[?12l[?25h[?25ll[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25ll[?12l[?25h[?25li[?12l[?25h[?25ls[?12l[?25h[?25lm[?12l[?25h[?25l_[?12l[?25h[?25lt[?12l[?25h[?25lh[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25la[?12l[?25h[?25ld[?12l[?25h[?25ls[?12l[?25h[?25l=[?12l[?25h[?25l4[?12l[?25h[?25l)[?12l[?25h[?25l)[?12l[?25h[?25l)[?12l[?25h[?25l[1;237H(B[0;7mModified(B[m[25;116H [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l(B[0;1m[36min[39m(B[m[K[?12l[?25h[?25li[K[?12l[?25h[?25l[42m [49m(B[m[K[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l_â€Œ[?12l[?25h[?25l_[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l(B[0;1m[36min[39m(B[m[K[?12l[?25h[?25li[K[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[K[?12l[?25h[?25l[25;63r[63;1H
[1;65r[62;5Htrain_x = numpy.array([t.transpose() (B[0;1m[36mfor[39m(B[m t (B[0;1m[36min[39m(B[m train_x])[24;44H[?12l[?25h[?25l[25d[?12l[?25h[?25l[25;63r[63;1H
[1;65r[62;5Htest_x = numpy.array([t.transpose() (B[0;1m[36mfor[39m(B[m t (B[0;1m[36min[39m(B[m test_x])[24;44H[?12l[?25h[?25l[63d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                                                                                                                         [64;1H Y(B[m Yes[K[65d(B[0;7m N(B[m No  [65;17H(B[0;7m^C(B[m Cancel[K[63;63H[?12l[?25h[?25l[64d(B[0;7m^G(B[m Get Help[64;62H(B[0;7mM-D(B[m DOS Format[64;123H(B[0;7mM-A(B[m Append[64;184H(B[0;7mM-B(B[m Backup File[65d(B[0;7m^C(B[m Cancel[17G         [65;62H(B[0;7mM-M(B[m Mac Format[65;123H(B[0;7mM-P(B[m Prepend[65;184H(B[0;7m^T(B[m To Files[63d(B[0;7mFile Name to Write: single_test_lstm.py                      (B[m[63;40H[?12l[?25h[?25l[K[1;245H[1;237H(B[0;7m        (B[m[63;115H(B[0;7m[ Wrote 91 lines ](B[m[J[65;246H[?12l[?25h[65;1H[?1049l[23;0;0t[?1l>]0;khalil_carsten@testboard: ~/TestBoard/scripts[01;32mkhalil_carsten@testboard[00m:[01;34m~/TestBoard/scripts[00m$ nano single_test_lstm.py [3@python3[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
Using TensorFlow backend.
  0%|                                                                                                                                                                                                            | 0/10 [00:00<?, ?it/s, best loss: ?]WARNING:tensorflow:From /home/khalil_carsten/.local/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py:263: colocate_with (from tensorflow.python.framework.ops) is deprecated and will be removed in a future version.
Instructions for updating:
Colocations handled automatically by placer.
WARNING:tensorflow:From /home/khalil_carsten/.local/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py:3733: calling dropout (from tensorflow.python.ops.nn_ops) with keep_prob is deprecated and will be removed in a future version.
Instructions for updating:
Please use `rate` instead of `keep_prob`. Rate should be set to `rate = 1 - keep_prob`.
WARNING:tensorflow:From /home/khalil_carsten/.local/lib/python3.6/site-packages/tensorflow/python/ops/math_ops.py:3066: to_int32 (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use tf.cast instead.
2019-09-16 17:03:02.277073: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2019-09-16 17:03:02.281506: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2200000000 Hz
2019-09-16 17:03:02.281855: I tensorflow/compiler/xla/service/service.cc:150] XLA service 0x1f0e6f0 executing computations on platform Host. Devices:
2019-09-16 17:03:02.281891: I tensorflow/compiler/xla/service/service.cc:158]   StreamExecutor device (0): <undefined>, <undefined>
^C
Traceback (most recent call last):
  File "single_test_lstm.py", line 88, in <module>
    best = fmin(objective, space, algo=tpe.suggest, trials=trials, max_evals=10)
  File "/home/khalil_carsten/.local/lib/python3.6/site-packages/hyperopt/fmin.py", line 388, in fmin
    show_progressbar=show_progressbar,
  File "/home/khalil_carsten/.local/lib/python3.6/site-packages/hyperopt/base.py", line 639, in fmin
    show_progressbar=show_progressbar)
  File "/home/khalil_carsten/.local/lib/python3.6/site-packages/hyperopt/fmin.py", line 407, in fmin
    rval.exhaust()
  File "/home/khalil_carsten/.local/lib/python3.6/site-packages/hyperopt/fmin.py", line 262, in exhaust
    self.run(self.max_evals - n_done, block_until_done=self.asynchronous)
  File "/home/khalil_carsten/.local/lib/python3.6/site-packages/hyperopt/fmin.py", line 227, in run
    self.serial_evaluate()
  File "/home/khalil_carsten/.local/lib/python3.6/site-packages/hyperopt/fmin.py", line 141, in serial_evaluate
    result = self.domain.evaluate(spec, ctrl)
  File "/home/khalil_carsten/.local/lib/python3.6/site-packages/hyperopt/base.py", line 844, in evaluate
    rval = self.fn(pyll_rval)
  File "single_test_lstm.py", line 78, in objective
    verbose=0, validation_split=0.33)
  File "/home/khalil_carsten/.local/lib/python3.6/site-packages/keras/engine/training.py", line 1178, in fit
    validation_freq=validation_freq)
  File "/home/khalil_carsten/.local/lib/python3.6/site-packages/keras/engine/training_arrays.py", line 204, in fit_loop
    outs = fit_function(ins_batch)
  File "/home/khalil_carsten/.local/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py", line 2979, in __call__
    return self._call(inputs)
  File "/home/khalil_carsten/.local/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py", line 2937, in _call
    fetched = self._callable_fn(*array_vals)
  File "/home/khalil_carsten/.local/lib/python3.6/site-packages/tensorflow/python/client/session.py", line 1439, in __call__
    run_metadata_ptr)
KeyboardInterrupt
]0;khalil_carsten@testboard: ~/TestBoard/scripts[01;32mkhalil_carsten@testboard[00m:[01;34m~/TestBoard/scripts[00m$ python3 single_test_lstm.py 
Using TensorFlow backend.
  0%|                                                                                                                                                                                                            | 0/10 [00:00<?, ?it/s, best loss: ?]WARNING:tensorflow:From /home/khalil_carsten/.local/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py:263: colocate_with (from tensorflow.python.framework.ops) is deprecated and will be removed in a future version.
Instructions for updating:
Colocations handled automatically by placer.
WARNING:tensorflow:From /home/khalil_carsten/.local/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py:3733: calling dropout (from tensorflow.python.ops.nn_ops) with keep_prob is deprecated and will be removed in a future version.
Instructions for updating:
Please use `rate` instead of `keep_prob`. Rate should be set to `rate = 1 - keep_prob`.
WARNING:tensorflow:From /home/khalil_carsten/.local/lib/python3.6/site-packages/tensorflow/python/ops/math_ops.py:3066: to_int32 (from tensorflow.python.ops.math_ops) is dep